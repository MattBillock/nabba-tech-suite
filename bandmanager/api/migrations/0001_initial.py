# Generated by Django 3.1 on 2023-09-30 00:13

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('address', models.TextField()),
                ('social_media_info', models.JSONField()),
                ('band_photo_url', models.URLField()),
                ('band_logo_url', models.URLField()),
                ('band_bio', models.TextField()),
                ('name', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.TextField()),
                ('date', models.DateField()),
                ('bands', models.ManyToManyField(to='api.Band')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('master_start_time', models.DateTimeField()),
                ('master_end_time', models.DateTimeField()),
                ('performance_time', models.DateTimeField()),
                ('slot_anonymizing_slug', models.TextField()),
                ('streaming_links', models.JSONField()),
                ('warmup_location', models.TextField()),
                ('case_storage', models.TextField()),
                ('warmup_time', models.DateTimeField()),
                ('photo_time', models.DateTimeField()),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.band')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.contest')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('address', models.TextField()),
                ('city', models.TextField()),
                ('state', models.TextField()),
                ('zip', models.TextField()),
                ('country', models.TextField()),
                ('phone', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('youth', models.BooleanField()),
                ('headshot_url', models.URLField()),
                ('social_media_info', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.TextField()),
                ('abbreviation', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.TextField()),
                ('address', models.TextField()),
                ('venue_information', models.TextField()),
                ('map_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.contest')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.performanceslot')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('score_sheet_url', models.URLField()),
                ('score', models.FloatField()),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.band')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.contest')),
            ],
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('stripe_uuid', models.TextField()),
                ('creation_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('is_subscription', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
            ],
        ),
        migrations.AddField(
            model_name='performanceslot',
            name='person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.person'),
        ),
        migrations.AddField(
            model_name='performanceslot',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.venue'),
        ),
        migrations.CreateModel(
            name='Musician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('instrument', models.TextField()),
                ('bands', models.ManyToManyField(to='api.Band')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('is_test_piece', models.BooleanField(default=False)),
                ('publisher', models.TextField()),
                ('title', models.TextField()),
                ('composer', models.TextField()),
                ('performance_length', models.TextField()),
                ('reference_recording_url', models.URLField()),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.section')),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('bio', models.TextField()),
                ('headshot_url', models.URLField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
                ('slots', models.ManyToManyField(to='api.PerformanceSlot')),
            ],
        ),
        migrations.CreateModel(
            name='Ensemble',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.TextField()),
                ('members', models.ManyToManyField(to='api.Musician')),
            ],
        ),
        migrations.CreateModel(
            name='EmailPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('bridge_flag', models.BooleanField(default=True)),
                ('contest_flag', models.BooleanField(default=True)),
                ('general_flag', models.BooleanField(default=True)),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.person')),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('bio', models.TextField()),
                ('bands', models.ManyToManyField(to='api.Band')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
            ],
        ),
        migrations.CreateModel(
            name='Commentary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('commentary_url', models.URLField()),
                ('performance_slot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.performanceslot')),
            ],
        ),
        migrations.AddField(
            model_name='band',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.person'),
        ),
        migrations.AddField(
            model_name='band',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.section'),
        ),
    ]
